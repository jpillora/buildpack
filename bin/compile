#!/bin/bash

BUILD=$1
CACHE_VERSION=v5
CACHE_ROOT=$2
CACHE=$CACHE_ROOT/versions/$CACHE_VERSION
ENV=$3

GO_VERSION=1.9.1
NODE_VERSION=8.6.0
NODE_BUILD=node-v$NODE_VERSION-linux-x64

if [ -f $BUILD/run ]; then
	#set executable
	chmod +x $BUILD/run
elif [ ! -f $BUILD/Procfile ]; then
	echo "-----! You need a $BUILD/run or $BUILD/Procfile"
	exit 1
fi

if [[ $STACK != cedar* ]]; then
	echo "-----! Only cedar stacks are supported"
	exit 1
fi

#cache things
if [ -d $CACHE ]; then
	echo "-----> Using cache"
else
	echo "-----> Build cache"
	rm -rf $ROOT_CACHE/versions
	mkdir -p $CACHE/jp
	echo "       Install Node $NODE_VERSION"
	curl -s http://nodejs.org/dist/v$NODE_VERSION/$NODE_BUILD.tar.gz | tar -C $CACHE/jp -xzf -
	echo "       Install Go $GO_VERSION"
	curl -s https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C $CACHE/jp -xzf -
	echo "       Create environment profile"
	#this is for application environment
	mkdir -p $CACHE/.profile.d
	echo "#extra vars
	export GOPATH=\$HOME/go
	export GOROOT=\$HOME/jp/go
	export NODE_BIN=\$HOME/jp/$NODE_BUILD/bin
	PATH=\$PATH:\$HOME/bin:\$HOME/jp/go/bin:\$GOPATH/bin:\$NODE_BIN
	" >$CACHE/.profile.d/vars.sh
fi
echo

#this is for buildpack (compile) environment
export GOPATH=$CACHE/go
export GOROOT=$CACHE/jp/go
export NODE_BIN=$CACHE/jp/$NODE_BUILD/bin
export PATH=$PATH:$CACHE/jp/go/bin:$GOPATH/bin:$NODE_BIN

#run user compile script
if [ -f $BUILD/compile ]; then
	echo "-----> Running user 'compile' script"
	cd $BUILD
	chmod +x compile
	./compile $BUILD $CACHE $ENV || exit 1
	rm compile
	echo
fi

#print versions or die
echo "-----> Runtime check"
echo -n "       node version " && node --version || exit 1
echo -n "       npm version " && npm --version || exit 1
echo -n "       " && go version || exit 1
echo

#setup from cache (. means copy all files)
echo "-----> Copy cache"
cp -r $CACHE/. $BUILD || exit 1
echo

exit 0
